---
# tasks file for roles/vty
  - name: GATHER VTY INFO => nxos
    nxos_command:
      commands:
        - show run | sec access-class
    #when: OSFOUND == 'nxos'
    register: findvty
    #tags: vty

  - debug: msg="{{findvty.stdout_lines}}"
    #tags: vty

  - set_fact: pattern=" (\w+) "
    #tags: vty

  - name: SETTING MATCH VAR
    set_fact: MATCH="{{findvty.stdout[0] | regex_search(pattern) | replace(' ', '')}}"
    #tags: vty

  - debug: var=MATCH
    #tags: vty

  - name: CURRENT VTY ACL
    nxos_command:
      commands: "show access-list {{ MATCH }}"
    #when: OSFOUND == 'nxos'
    register: beforeacl
    #tags: vty

  - debug: msg="{{beforeacl.stdout_lines}}"
    #tags: vty

###### PUSH CONFIGURE #######
  - name: REMOVE OLD VTY ACCESS_CLASS
    nxos_config:
      lines:
        - "no access-class {{ MATCH }} in"
      parents: ['line vty']
      match: exact
    when: "'{{ MATCH }}' != None"
    #when: OSFOUND == 'nxos'

  - name: REMOVE OLD ACL
    nxos_config:
      lines:
        - "no ip access-list {{ MATCH }}"
    when: "'{{ MATCH }}' != None"

  - name: CREATING NEW VTY ACL
    nxos_config:
      lines:
        - "ip access-list VTY_ACCESS_ACL"
      match: exact
    #when: {{ MATCH }} != 'VTY_ACCESS_ACL'
    #when: OSFOUND == 'nxos'

  - name: ADDING ACL TO ACCESS_LIST
    nxos_config:
      lines:  "{{ item }}"
      parents: ['ip access-list VTY_ACCESS_ACL']
      match: exact
    with_items: "{{ VTY_ACCESS_ACL }}"
    #when: OSFOUND == 'nxos'

  - name: APPLY NEW ACL TO VTY LINES ON NXOS
    nxos_config:
      lines:
        - access-class VTY_ACCESS_ACL in
      parents: ['line vty']
    #when OSFOUND == 'nxos'
      save_when: always
    tags: save

#   - name: SAVE CONFIG
#     nxos_config:
#       lines:
#         - copy running-configuration startup-configuration
#     tags: save

  - name: CHECK ACLs
    nxos_command:
      commands: "show access-list VTY_ACCESS_ACL"
    #when: OSFOUND == 'nxos'
    register: afteracl

  - debug: var=afteracl.stdout_lines
